---
# project information
project_name: immich
project_url: "https://immich.app/"
project_logo: "https://user-images.githubusercontent.com/27055614/182044984-2ee6d1ed-c4a7-4331-8a4b-64fcde77fe1f.png"
project_blurb: "Immich is a high performance self-hosted photo and video backup solution."
project_github_repo_url: "https://github.com/imagegenius/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest" }
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest" }

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Latest Immich release with an Ubuntu base." }
  - { tag: "noml", desc: "Latest Immich release with an Alpine base. Machine-learning and Search with Typesense are completely removed, making it a very lightweight image." }

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "DB_HOSTNAME", env_value: "192.168.1.x", desc: "PostgreSQL Host" }
  - { env_var: "DB_USERNAME", env_value: "postgres", desc: "PostgreSQL Username" }
  - { env_var: "DB_PASSWORD", env_value: "postgres", desc: "PostgreSQL Password" }
  - { env_var: "DB_DATABASE_NAME", env_value: "immich", desc: "PostgreSQL Database Name" }
  - { env_var: "REDIS_HOSTNAME", env_value: "192.168.1.x", desc: "Redis Hostname" }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "path_to_appdata", desc: "Contains the logs, machine-learning models and Typesense data" }
  - { vol_path: "/photos", vol_host_path: "path_to_photos", desc: "Contains all the photos uploaded to Immich" }
param_usage_include_ports: true
param_ports:
  - { external_port: "8080", internal_port: "8080", port_desc: "WebUI Port" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "DISABLE_MACHINE_LEARNING", env_value: "false", desc: "Set to `true` to disable machine learning" }
  - { env_var: "DISABLE_TYPESENSE", env_value: "false", desc: "Set to `true` to disable Typesense (disables searching completely!)" }
  - { env_var: "DB_PORT", env_value: "5432", desc: "PostgreSQL Port" }
  - { env_var: "REDIS_PORT", env_value: "6379", desc: "Redis Port" }
  - { env_var: "REDIS_PASSWORD", env_value: "", desc: "Redis password" }
  - { env_var: "CUDA_ACCELERATION", env_value: "false", desc: "Set to `true` to enable CUDA Acceleration (NVIDIA GPU must be passed through! `--gpus=all`)" }
opt_param_usage_include_vols: true
opt_param_volumes:
  - { vol_path: "/config/machine-learning", vol_host_path: "path_to_machine-learning", desc: "Store the machine-learning models (~800MB)" }
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# unraid template
unraid_requirement: "PostgreSQL 14, Redis"
unraid_category: "Backup: Cloud: MediaApp:Photos"

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The WebUI can be accessed at `http://your-ip:8080` Follow the wizard to set up Immich.

  To use Immich, you need to have PostgreSQL 14/15 server set up externally, and Redis set up externally or within the container using a docker mod.

  To set up redis using the docker mod, use the following:

  Set `DOCKER_MODS=imagegenius/mods:universal-redis`, and `REDIS_HOSTNAME` to `localhost`.

  Machine Learning operations tend to be CPU-intensive. If you're operating Immich on less capable hardware, we recommend disabling this feature. You can easily do so by setting `DISABLE_IMMICH_MACHINE_LEARNING` to `true`.

  Search functionality is powered by Typesense, which requires a CPU compatible with AVX. If your CPU does not support AVX, you can disable the search feature by setting `DISABLE_TYPESENSE` to `true`.

  Take note that when `CUDA_ACCELERATION` is set to `true`, container startup times will be longer. This is because it triggers a force upgrade of the CUDA pip packages every time the container restarts. 'TAG OBJECTS' and 'ENCODE CLIP' jobs will leverage GPU acceleration, however, the 'RECOGNIZE FACES' job won't utilize GPU acceleration.

  If you desire GPU acceleration for all your machine learning jobs, you'll need to set up a new `immich-cuda-node` Docker. All the necessary instructions to do this are available on [the immich-cuda-node repository](https://github.com/imagegenius/docker-immich-cuda-node/).

external_application_snippet_enabled: true
external_application_cli_block: |
  # Redis:
  docker run -d \
    --name=redis \
    -p 6379:6379 \
    redis

  # PostgreSQL 14:
  docker run -d \
    --name=postgres14 \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_DB=immich \
    -v path_to_postgres:/var/lib/postgresql/data \
    -p 5432:5432 \
    postgres:14
external_application_compose_block: |
  # Redis:
    redis:
      image: redis
      ports:
        - 6379:6379
      container_name: redis
  # PostgreSQL 14:
    postgres14:
      image: postgres:14
      ports:
        - 5432:5432
      container_name: postgres14
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: immich
      volumes:
        - path_to_postgres:/var/lib/postgresql/data
external_application_unraid_block: |
  You can also use a docker mods to start redis within the container,
  Set `DOCKER_MODS=imagegenius/mods:universal-redis`, and `REDIS_HOSTNAME` to `localhost`.

# changelog
changelogs:
  - { date: "23.05.23:", desc: "move to ubuntu lunar and support cuda acceleration for machine-learning" }
  - { date: "22.05.23:", desc: "deprecate postgresql docker mod" }
  - { date: "18.05.23:", desc: "add support for facial recognition" }
  - { date: "07.05.23:", desc: "remove unused `JWT_SECRET` env" }
  - { date: "13.04.23:", desc: "add variables to disable typesense and machine learning" }
  - { date: "10.04.23:", desc: "fix gunicorn" }
  - { date: "04.04.23:", desc: "use environment variables to set location of the photos folder" }
  - { date: "09.04.23:", desc: "Cache is downloaded to the host (/config/transformers)" }
  - { date: "01.04.23:", desc: "remove unused Immich environment variables" }
  - { date: "21.03.23:", desc: "Add service checks" }
  - { date: "05.03.23:", desc: "add typesense" }
  - { date: "27.02.23:", desc: "re-enable aarch64 with pre-release torch build" }
  - { date: "18.02.23:", desc: "use machine-learning with python" }
  - { date: "11.02.23:", desc: "use external app block" }
  - { date: "09.02.23:", desc: "Use Immich environment variables for immich services instead of hosts file" }
  - { date: "09.02.23:", desc: "execute CLI with the command immich" }
  - { date: "04.02.23:", desc: "shrink image" }
  - { date: "26.01.23:", desc: "add unraid migration to readme" }
  - { date: "26.01.23:", desc: "use find to apply chown to /app, excluding node_modules" }
  - { date: "26.01.23:", desc: "enable ci testing" }
  - { date: "24.01.23:", desc: "fix services starting prematurely, causing permission errors." }
  - { date: "23.01.23:", desc: "add noml image to readme and add aarch64 image to readme, make github release stable" }
  - { date: "21.01.23:", desc: "BREAKING: Redis is removed. Update missing param_env_vars & opt_param_env_vars for redis & postgres" }
  - { date: "02.01.23:", desc: "Initial Release." }
