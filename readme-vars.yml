---

# project information
project_name: immich
project_url: "https://immich.app/"
project_logo: "https://github.com/immich-app/immich/raw/main/design/immich-logo.svg"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) - High performance self-hosted photo and video backup solution."
project_github_repo_url: "https://github.com/imagegenius/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Latest Immich release with an Ubuntu base." }
  - { tag: "noml", desc: "Latest Immich release with an Alpine base. Machine-learning is completly removed. (tinnny image), use this if your CPU does not support AVX" }

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Australia/Melbourne", desc: "Specify a timezone to use eg. Australia/Melbourne." }
  - { env_var: "DB_HOSTNAME", env_value: "192.168.1.x", desc: "PostgreSQL Host" }
  - { env_var: "DB_USERNAME", env_value: "postgres", desc: "PostgreSQL Username" }
  - { env_var: "DB_PASSWORD", env_value: "postgres", desc: "PostgreSQL Password" }
  - { env_var: "DB_DATABASE_NAME", env_value: "immich", desc: "PostgreSQL Database Name" }
  - { env_var: "REDIS_HOSTNAME", env_value: "redis", desc: "Redis Hostname" }
  - { env_var: "JWT_SECRET", env_value: "somelongrandomstring", desc: "Run `openssl rand -base64 128`" }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "path_to_data", desc: "Contains the logs" }
  - { vol_path: "/photos", vol_host_path: "path_to_photos", desc: "Contains all the photos uploaded to Immich" }
param_usage_include_ports: true
param_ports:
  - { external_port: "8080", internal_port: "8080", port_desc: "WebUI Port" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "DB_PORT", env_value: "5432", desc: "PostgreSQL Port" }
  - { env_var: "REDIS_PORT", env_value: "6379", desc: "Redis Port" }  
  - { env_var: "REDIS_PASSWORD", env_value: "", desc: "Redis password" }
  - { env_var: "REDIS_DBINDEX", env_value: "0", desc: "Redis Database index, integer between 0-15" }
  - { env_var: "DISABLE_REVERSE_GEOCODING", env_value: "false", desc: "Disable reverse Geocoding" }
  - { env_var: "REVERSE_GEOCODING_PRECISION", env_value: "3", desc: "Reverse geocoding precision (1, 2 & 3)" }
  - { env_var: "PUBLIC_LOGIN_PAGE_MESSAGE", env_value: "", desc: "Custom message on the login page, should be written in HTML form" }
  - { env_var: "LOG_LEVEL", env_value: "log", desc: "logging severity levels: simple, verbose, debug, log, warn, error" }
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# unraid template
unraid_requirement: "PostgreSQL 14, Redis"
unraid_category: "Backup: Cloud: MediaApp:Photos"

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Please report any issues with the container [here](https://github.com/imagegenius/docker-immich/issues)!

  **You will need to create a PostgreSQL 14 and Redis container to use with Immich**

  ### You can use these commands as a place to start a Redis and PostgreSQL container.

  Redis:

  ```bash
  docker run -d \
    --name=redis \
    -p 6379:6379 \
    redis
  ```

  PostgreSQL 14:

  ```bash
  docker run -d \
    --name=postgres14 \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_DB=immich \
    -v path_to_postgres:/var/lib/postgresql/data \
    -p 5432:5432 \
    postgres:14
  ```
  ## Unraid : Migrate from docker-compose

  Move the contents of the previous Postgres docker.

  ```sh
  mv /var/lib/postgresql/data /mnt/user/appdata/postgres14
  ```

  Remove all variables from the postgres template :
  `POSTGRES_USER`, `POSTGRES_PASSWORD`, `POSTGRES_DB`

  The database is already initialised and these variables don't do anything.

  Start the postgres 14 container and mount it to /mnt/user/appdata/postgres14 on the host.

  ```sh
  mv /mnt/user/immich/uploads /mnt/user/<wherever_you_desire>
  ```

  Edit the Container Path `/photos` and add `/mnt/user/<wherever_you_desire>` to the Host Path
# changelog
changelogs:
  - { date: "24.01.23:", desc: "add migration guide to readme, add more opt_param_env_vars" }
  - { date: "24.01.23:", desc: "fix services starting prematurely, causing permission errors." }
  - { date: "23.01.23:", desc: "add noml image to readme and add aarch64 image to readme, make github release stable" }
  - { date: "21.01.23:", desc: "BREAKING: Redis is removed. Update missing param_env_vars & opt_param_env_vars for redis & postgres" }
  - { date: "02.01.23:", desc: "Initial Release." }
